"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tsparticles+shape-image@3.8.1";
exports.ids = ["vendor-chunks/@tsparticles+shape-image@3.8.1"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/ByteStream.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/ByteStream.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ByteStream: () => (/* binding */ ByteStream)\n/* harmony export */ });\nclass ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        const increment = 2, previous = 1, shift = 8;\n        this.pos += increment;\n        return this.data[this.pos - increment] + (this.data[this.pos - previous] << shift);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        const minCount = 0, emptySize = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= minCount; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== emptySize);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = this.data[this.pos], len = 0;\n        const emptySize = 0, increment = 1;\n        for (let offset = 0; size !== emptySize; offset += size + increment, size = this.data[this.pos + offset]) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        size = this.data[this.pos++];\n        for (let i = 0; size !== emptySize; size = this.data[this.pos++]) {\n            for (let count = size; --count >= emptySize; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (const increment = 1, noData = 0; this.data[this.pos] !== noData; this.pos += this.data[this.pos] + increment) {\n        }\n        this.pos++;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL0dpZlV0aWxzL0J5dGVTdHJlYW0uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMscUJBQXFCO0FBQ3hEO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsb0JBQW9CO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG9CQUFvQjtBQUM1QyxtQ0FBbUMsc0JBQXNCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsZ0NBQWdDO0FBQzlFO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVyc29uYWwtcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0B0c3BhcnRpY2xlcytzaGFwZS1pbWFnZUAzLjguMS9ub2RlX21vZHVsZXMvQHRzcGFydGljbGVzL3NoYXBlLWltYWdlL2VzbS9HaWZVdGlscy9CeXRlU3RyZWFtLmpzPzFjZDciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEJ5dGVTdHJlYW0ge1xuICAgIGNvbnN0cnVjdG9yKGJ5dGVzKSB7XG4gICAgICAgIHRoaXMucG9zID0gMDtcbiAgICAgICAgdGhpcy5kYXRhID0gbmV3IFVpbnQ4Q2xhbXBlZEFycmF5KGJ5dGVzKTtcbiAgICB9XG4gICAgZ2V0U3RyaW5nKGNvdW50KSB7XG4gICAgICAgIGNvbnN0IHNsaWNlID0gdGhpcy5kYXRhLnNsaWNlKHRoaXMucG9zLCB0aGlzLnBvcyArIGNvdW50KTtcbiAgICAgICAgdGhpcy5wb3MgKz0gc2xpY2UubGVuZ3RoO1xuICAgICAgICByZXR1cm4gc2xpY2UucmVkdWNlKChhY2MsIGN1cnIpID0+IGFjYyArIFN0cmluZy5mcm9tQ2hhckNvZGUoY3VyciksIFwiXCIpO1xuICAgIH1cbiAgICBuZXh0Qnl0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVt0aGlzLnBvcysrXTtcbiAgICB9XG4gICAgbmV4dFR3b0J5dGVzKCkge1xuICAgICAgICBjb25zdCBpbmNyZW1lbnQgPSAyLCBwcmV2aW91cyA9IDEsIHNoaWZ0ID0gODtcbiAgICAgICAgdGhpcy5wb3MgKz0gaW5jcmVtZW50O1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhW3RoaXMucG9zIC0gaW5jcmVtZW50XSArICh0aGlzLmRhdGFbdGhpcy5wb3MgLSBwcmV2aW91c10gPDwgc2hpZnQpO1xuICAgIH1cbiAgICByZWFkU3ViQmxvY2tzKCkge1xuICAgICAgICBsZXQgYmxvY2tTdHJpbmcgPSBcIlwiLCBzaXplID0gMDtcbiAgICAgICAgY29uc3QgbWluQ291bnQgPSAwLCBlbXB0eVNpemUgPSAwO1xuICAgICAgICBkbyB7XG4gICAgICAgICAgICBzaXplID0gdGhpcy5kYXRhW3RoaXMucG9zKytdO1xuICAgICAgICAgICAgZm9yIChsZXQgY291bnQgPSBzaXplOyAtLWNvdW50ID49IG1pbkNvdW50OyBibG9ja1N0cmluZyArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKHRoaXMuZGF0YVt0aGlzLnBvcysrXSkpIHtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSB3aGlsZSAoc2l6ZSAhPT0gZW1wdHlTaXplKTtcbiAgICAgICAgcmV0dXJuIGJsb2NrU3RyaW5nO1xuICAgIH1cbiAgICByZWFkU3ViQmxvY2tzQmluKCkge1xuICAgICAgICBsZXQgc2l6ZSA9IHRoaXMuZGF0YVt0aGlzLnBvc10sIGxlbiA9IDA7XG4gICAgICAgIGNvbnN0IGVtcHR5U2l6ZSA9IDAsIGluY3JlbWVudCA9IDE7XG4gICAgICAgIGZvciAobGV0IG9mZnNldCA9IDA7IHNpemUgIT09IGVtcHR5U2l6ZTsgb2Zmc2V0ICs9IHNpemUgKyBpbmNyZW1lbnQsIHNpemUgPSB0aGlzLmRhdGFbdGhpcy5wb3MgKyBvZmZzZXRdKSB7XG4gICAgICAgICAgICBsZW4gKz0gc2l6ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBibG9ja0RhdGEgPSBuZXcgVWludDhBcnJheShsZW4pO1xuICAgICAgICBzaXplID0gdGhpcy5kYXRhW3RoaXMucG9zKytdO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgc2l6ZSAhPT0gZW1wdHlTaXplOyBzaXplID0gdGhpcy5kYXRhW3RoaXMucG9zKytdKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBjb3VudCA9IHNpemU7IC0tY291bnQgPj0gZW1wdHlTaXplOyBibG9ja0RhdGFbaSsrXSA9IHRoaXMuZGF0YVt0aGlzLnBvcysrXSkge1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBibG9ja0RhdGE7XG4gICAgfVxuICAgIHNraXBTdWJCbG9ja3MoKSB7XG4gICAgICAgIGZvciAoY29uc3QgaW5jcmVtZW50ID0gMSwgbm9EYXRhID0gMDsgdGhpcy5kYXRhW3RoaXMucG9zXSAhPT0gbm9EYXRhOyB0aGlzLnBvcyArPSB0aGlzLmRhdGFbdGhpcy5wb3NdICsgaW5jcmVtZW50KSB7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wb3MrKztcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/ByteStream.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Constants.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Constants.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InterlaceOffsets: () => (/* binding */ InterlaceOffsets),\n/* harmony export */   InterlaceSteps: () => (/* binding */ InterlaceSteps)\n/* harmony export */ });\nconst InterlaceOffsets = [0, 4, 2, 1];\nconst InterlaceSteps = [8, 8, 4, 2];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL0dpZlV0aWxzL0NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZXJzb25hbC1wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL0dpZlV0aWxzL0NvbnN0YW50cy5qcz8yNTFhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBJbnRlcmxhY2VPZmZzZXRzID0gWzAsIDQsIDIsIDFdO1xuZXhwb3J0IGNvbnN0IEludGVybGFjZVN0ZXBzID0gWzgsIDgsIDQsIDJdO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Enums/DisposalMethod.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Enums/DisposalMethod.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DisposalMethod: () => (/* binding */ DisposalMethod)\n/* harmony export */ });\nvar DisposalMethod;\n(function (DisposalMethod) {\n    DisposalMethod[DisposalMethod[\"Replace\"] = 0] = \"Replace\";\n    DisposalMethod[DisposalMethod[\"Combine\"] = 1] = \"Combine\";\n    DisposalMethod[DisposalMethod[\"RestoreBackground\"] = 2] = \"RestoreBackground\";\n    DisposalMethod[DisposalMethod[\"RestorePrevious\"] = 3] = \"RestorePrevious\";\n    DisposalMethod[DisposalMethod[\"UndefinedA\"] = 4] = \"UndefinedA\";\n    DisposalMethod[DisposalMethod[\"UndefinedB\"] = 5] = \"UndefinedB\";\n    DisposalMethod[DisposalMethod[\"UndefinedC\"] = 6] = \"UndefinedC\";\n    DisposalMethod[DisposalMethod[\"UndefinedD\"] = 7] = \"UndefinedD\";\n})(DisposalMethod || (DisposalMethod = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL0dpZlV0aWxzL0VudW1zL0Rpc3Bvc2FsTWV0aG9kLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVyc29uYWwtcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0B0c3BhcnRpY2xlcytzaGFwZS1pbWFnZUAzLjguMS9ub2RlX21vZHVsZXMvQHRzcGFydGljbGVzL3NoYXBlLWltYWdlL2VzbS9HaWZVdGlscy9FbnVtcy9EaXNwb3NhbE1ldGhvZC5qcz9iYmUyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgRGlzcG9zYWxNZXRob2Q7XG4oZnVuY3Rpb24gKERpc3Bvc2FsTWV0aG9kKSB7XG4gICAgRGlzcG9zYWxNZXRob2RbRGlzcG9zYWxNZXRob2RbXCJSZXBsYWNlXCJdID0gMF0gPSBcIlJlcGxhY2VcIjtcbiAgICBEaXNwb3NhbE1ldGhvZFtEaXNwb3NhbE1ldGhvZFtcIkNvbWJpbmVcIl0gPSAxXSA9IFwiQ29tYmluZVwiO1xuICAgIERpc3Bvc2FsTWV0aG9kW0Rpc3Bvc2FsTWV0aG9kW1wiUmVzdG9yZUJhY2tncm91bmRcIl0gPSAyXSA9IFwiUmVzdG9yZUJhY2tncm91bmRcIjtcbiAgICBEaXNwb3NhbE1ldGhvZFtEaXNwb3NhbE1ldGhvZFtcIlJlc3RvcmVQcmV2aW91c1wiXSA9IDNdID0gXCJSZXN0b3JlUHJldmlvdXNcIjtcbiAgICBEaXNwb3NhbE1ldGhvZFtEaXNwb3NhbE1ldGhvZFtcIlVuZGVmaW5lZEFcIl0gPSA0XSA9IFwiVW5kZWZpbmVkQVwiO1xuICAgIERpc3Bvc2FsTWV0aG9kW0Rpc3Bvc2FsTWV0aG9kW1wiVW5kZWZpbmVkQlwiXSA9IDVdID0gXCJVbmRlZmluZWRCXCI7XG4gICAgRGlzcG9zYWxNZXRob2RbRGlzcG9zYWxNZXRob2RbXCJVbmRlZmluZWRDXCJdID0gNl0gPSBcIlVuZGVmaW5lZENcIjtcbiAgICBEaXNwb3NhbE1ldGhvZFtEaXNwb3NhbE1ldGhvZFtcIlVuZGVmaW5lZERcIl0gPSA3XSA9IFwiVW5kZWZpbmVkRFwiO1xufSkoRGlzcG9zYWxNZXRob2QgfHwgKERpc3Bvc2FsTWV0aG9kID0ge30pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Enums/DisposalMethod.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Types/GIFDataHeaders.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Types/GIFDataHeaders.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GIFDataHeaders: () => (/* binding */ GIFDataHeaders)\n/* harmony export */ });\nvar GIFDataHeaders;\n(function (GIFDataHeaders) {\n    GIFDataHeaders[GIFDataHeaders[\"Extension\"] = 33] = \"Extension\";\n    GIFDataHeaders[GIFDataHeaders[\"ApplicationExtension\"] = 255] = \"ApplicationExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"GraphicsControlExtension\"] = 249] = \"GraphicsControlExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"PlainTextExtension\"] = 1] = \"PlainTextExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"CommentExtension\"] = 254] = \"CommentExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"Image\"] = 44] = \"Image\";\n    GIFDataHeaders[GIFDataHeaders[\"EndOfFile\"] = 59] = \"EndOfFile\";\n})(GIFDataHeaders || (GIFDataHeaders = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL0dpZlV0aWxzL1R5cGVzL0dJRkRhdGFIZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL3BlcnNvbmFsLXBvcnRmb2xpby8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdHNwYXJ0aWNsZXMrc2hhcGUtaW1hZ2VAMy44LjEvbm9kZV9tb2R1bGVzL0B0c3BhcnRpY2xlcy9zaGFwZS1pbWFnZS9lc20vR2lmVXRpbHMvVHlwZXMvR0lGRGF0YUhlYWRlcnMuanM/OThiMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIEdJRkRhdGFIZWFkZXJzO1xuKGZ1bmN0aW9uIChHSUZEYXRhSGVhZGVycykge1xuICAgIEdJRkRhdGFIZWFkZXJzW0dJRkRhdGFIZWFkZXJzW1wiRXh0ZW5zaW9uXCJdID0gMzNdID0gXCJFeHRlbnNpb25cIjtcbiAgICBHSUZEYXRhSGVhZGVyc1tHSUZEYXRhSGVhZGVyc1tcIkFwcGxpY2F0aW9uRXh0ZW5zaW9uXCJdID0gMjU1XSA9IFwiQXBwbGljYXRpb25FeHRlbnNpb25cIjtcbiAgICBHSUZEYXRhSGVhZGVyc1tHSUZEYXRhSGVhZGVyc1tcIkdyYXBoaWNzQ29udHJvbEV4dGVuc2lvblwiXSA9IDI0OV0gPSBcIkdyYXBoaWNzQ29udHJvbEV4dGVuc2lvblwiO1xuICAgIEdJRkRhdGFIZWFkZXJzW0dJRkRhdGFIZWFkZXJzW1wiUGxhaW5UZXh0RXh0ZW5zaW9uXCJdID0gMV0gPSBcIlBsYWluVGV4dEV4dGVuc2lvblwiO1xuICAgIEdJRkRhdGFIZWFkZXJzW0dJRkRhdGFIZWFkZXJzW1wiQ29tbWVudEV4dGVuc2lvblwiXSA9IDI1NF0gPSBcIkNvbW1lbnRFeHRlbnNpb25cIjtcbiAgICBHSUZEYXRhSGVhZGVyc1tHSUZEYXRhSGVhZGVyc1tcIkltYWdlXCJdID0gNDRdID0gXCJJbWFnZVwiO1xuICAgIEdJRkRhdGFIZWFkZXJzW0dJRkRhdGFIZWFkZXJzW1wiRW5kT2ZGaWxlXCJdID0gNTldID0gXCJFbmRPZkZpbGVcIjtcbn0pKEdJRkRhdGFIZWFkZXJzIHx8IChHSUZEYXRhSGVhZGVycyA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Types/GIFDataHeaders.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Utils.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Utils.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeGIF: () => (/* binding */ decodeGIF),\n/* harmony export */   drawGif: () => (/* binding */ drawGif),\n/* harmony export */   getGIFLoopAmount: () => (/* binding */ getGIFLoopAmount),\n/* harmony export */   loadGifImage: () => (/* binding */ loadGifImage)\n/* harmony export */ });\n/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Utils.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Utils.js\");\n/* harmony import */ var _Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Constants.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Constants.js\");\n/* harmony import */ var _ByteStream_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ByteStream.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/ByteStream.js\");\n/* harmony import */ var _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Enums/DisposalMethod.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Enums/DisposalMethod.js\");\n/* harmony import */ var _Types_GIFDataHeaders_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Types/GIFDataHeaders.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Types/GIFDataHeaders.js\");\n\n\n\n\n\nconst origin = {\n    x: 0,\n    y: 0,\n}, defaultFrame = 0, half = 0.5, initialTime = 0, firstIndex = 0, defaultLoopCount = 0;\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nfunction parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case _Types_GIFDataHeaders_js__WEBPACK_IMPORTED_MODULE_4__.GIFDataHeaders.GraphicsControlExtension: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case _Types_GIFDataHeaders_js__WEBPACK_IMPORTED_MODULE_4__.GIFDataHeaders.ApplicationExtension: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case _Types_GIFDataHeaders_js__WEBPACK_IMPORTED_MODULE_4__.GIFDataHeaders.CommentExtension: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case _Types_GIFDataHeaders_js__WEBPACK_IMPORTED_MODULE_4__.GIFDataHeaders.PlainTextExtension: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        if (index !== getTransparencyIndex(null)) {\n            return { r, g, b, a: 255 };\n        }\n        return { r, g, b, a: avgAlpha ? ~~((r + g + b) / 3) : 0 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (_Constants_js__WEBPACK_IMPORTED_MODULE_1__.InterlaceOffsets[pass] < frame.height) {\n                let pixelPos = 0, lineIndex = 0, exit = false;\n                while (!exit) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (const item of dic[code]) {\n                            const { r, g, b, a } = getColor(item);\n                            image.data.set([r, g, b, a], _Constants_js__WEBPACK_IMPORTED_MODULE_1__.InterlaceOffsets[pass] * frame.width +\n                                _Constants_js__WEBPACK_IMPORTED_MODULE_1__.InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (_Constants_js__WEBPACK_IMPORTED_MODULE_1__.InterlaceOffsets[pass] + _Constants_js__WEBPACK_IMPORTED_MODULE_1__.InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            exit = true;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        let code = 0, size = minCodeSize + 1, pos = 0, pixelPos = -4, exit = false;\n        const dic = [[0]];\n        while (!exit) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    exit = true;\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (const item of dic[code]) {\n                    const { r, g, b, a } = getColor(item);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case _Types_GIFDataHeaders_js__WEBPACK_IMPORTED_MODULE_4__.GIFDataHeaders.EndOfFile:\n            return true;\n        case _Types_GIFDataHeaders_js__WEBPACK_IMPORTED_MODULE_4__.GIFDataHeaders.Image:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case _Types_GIFDataHeaders_js__WEBPACK_IMPORTED_MODULE_4__.GIFDataHeaders.Extension:\n            parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nfunction getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nasync function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new _ByteStream_js__WEBPACK_IMPORTED_MODULE_2__.ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__.DisposalMethod.Replace,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\nfunction drawGif(data) {\n    const { context, radius, particle, delta } = data, image = particle.image;\n    if (!image?.gifData || !image.gif) {\n        return;\n    }\n    const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n    if (!offscreenContext) {\n        throw new Error(\"could not create offscreen canvas context\");\n    }\n    offscreenContext.imageSmoothingQuality = \"low\";\n    offscreenContext.imageSmoothingEnabled = false;\n    offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n    if (particle.gifLoopCount === undefined) {\n        particle.gifLoopCount = image.gifLoopCount ?? defaultLoopCount;\n    }\n    let frameIndex = particle.gifFrame ?? defaultFrame;\n    const pos = { x: -image.gifData.width * half, y: -image.gifData.height * half }, frame = image.gifData.frames[frameIndex];\n    if (particle.gifTime === undefined) {\n        particle.gifTime = initialTime;\n    }\n    if (!frame.bitmap) {\n        return;\n    }\n    context.scale(radius / image.gifData.width, radius / image.gifData.height);\n    switch (frame.disposalMethod) {\n        case _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__.DisposalMethod.UndefinedA:\n        case _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__.DisposalMethod.UndefinedB:\n        case _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__.DisposalMethod.UndefinedC:\n        case _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__.DisposalMethod.UndefinedD:\n        case _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__.DisposalMethod.Replace:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            break;\n        case _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__.DisposalMethod.Combine:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            break;\n        case _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__.DisposalMethod.RestoreBackground:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            if (!image.gifData.globalColorTable.length) {\n                offscreenContext.putImageData(image.gifData.frames[firstIndex].image, pos.x + frame.left, pos.y + frame.top);\n            }\n            else {\n                offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n            }\n            break;\n        case _Enums_DisposalMethod_js__WEBPACK_IMPORTED_MODULE_3__.DisposalMethod.RestorePrevious:\n            {\n                const previousImageData = offscreenContext.getImageData(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                context.drawImage(offscreenCanvas, pos.x, pos.y);\n                offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.putImageData(previousImageData, origin.x, origin.y);\n            }\n            break;\n    }\n    particle.gifTime += delta.value;\n    if (particle.gifTime > frame.delayTime) {\n        particle.gifTime -= frame.delayTime;\n        if (++frameIndex >= image.gifData.frames.length) {\n            if (--particle.gifLoopCount <= defaultLoopCount) {\n                return;\n            }\n            frameIndex = firstIndex;\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n        }\n        particle.gifFrame = frameIndex;\n    }\n    context.scale(image.gifData.width / radius, image.gifData.height / radius);\n}\nasync function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.loadImage)(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? defaultLoopCount;\n        if (!image.gifLoopCount) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/ImageDrawer.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/ImageDrawer.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageDrawer: () => (/* binding */ ImageDrawer)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"(ssr)/./node_modules/.pnpm/@tsparticles+engine@3.8.1/node_modules/@tsparticles/engine/esm/index.js\");\n/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Utils.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Utils.js\");\n/* harmony import */ var _GifUtils_Utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GifUtils/Utils.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Utils.js\");\n\n\n\nconst double = 2, defaultAlpha = 1, sides = 12, defaultRatio = 1;\nclass ImageDrawer {\n    constructor(engine) {\n        this.validTypes = [\"image\", \"images\"];\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(data) {\n        const { context, radius, particle, opacity } = data, image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            (0,_GifUtils_Utils_js__WEBPACK_IMPORTED_MODULE_2__.drawGif)(data);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            }, diameter = radius * double;\n            context.drawImage(element, pos.x, pos.y, diameter, diameter / ratio);\n        }\n        context.globalAlpha = defaultAlpha;\n    }\n    getSidesCount() {\n        return sides;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            void this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        void (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await (0,_Utils_js__WEBPACK_IMPORTED_MODULE_1__.replaceImageColor)(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height\n                        ? imageData.width / imageData.height\n                        : (image.ratio ?? defaultRatio),\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.shapeFill, close = imageData.close ?? particle.shapeClose, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.shapeFill = imageShape.fill;\n            particle.shapeClose = imageShape.close;\n        })();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL0ltYWdlRHJhd2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0Q7QUFDSDtBQUNEO0FBQzlDO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyw0REFBVyxFQUFFO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixxQ0FBcUM7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMkRBQU87QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyw0REFBaUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BlcnNvbmFsLXBvcnRmb2xpby8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdHNwYXJ0aWNsZXMrc2hhcGUtaW1hZ2VAMy44LjEvbm9kZV9tb2R1bGVzL0B0c3BhcnRpY2xlcy9zaGFwZS1pbWFnZS9lc20vSW1hZ2VEcmF3ZXIuanM/ZWM2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlcnJvclByZWZpeCB9IGZyb20gXCJAdHNwYXJ0aWNsZXMvZW5naW5lXCI7XG5pbXBvcnQgeyByZXBsYWNlSW1hZ2VDb2xvciB9IGZyb20gXCIuL1V0aWxzLmpzXCI7XG5pbXBvcnQgeyBkcmF3R2lmIH0gZnJvbSBcIi4vR2lmVXRpbHMvVXRpbHMuanNcIjtcbmNvbnN0IGRvdWJsZSA9IDIsIGRlZmF1bHRBbHBoYSA9IDEsIHNpZGVzID0gMTIsIGRlZmF1bHRSYXRpbyA9IDE7XG5leHBvcnQgY2xhc3MgSW1hZ2VEcmF3ZXIge1xuICAgIGNvbnN0cnVjdG9yKGVuZ2luZSkge1xuICAgICAgICB0aGlzLnZhbGlkVHlwZXMgPSBbXCJpbWFnZVwiLCBcImltYWdlc1wiXTtcbiAgICAgICAgdGhpcy5sb2FkSW1hZ2VTaGFwZSA9IGFzeW5jIChpbWFnZVNoYXBlKSA9PiB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuX2VuZ2luZS5sb2FkSW1hZ2UpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZXJyb3JQcmVmaXh9IGltYWdlIHNoYXBlIG5vdCBpbml0aWFsaXplZGApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXdhaXQgdGhpcy5fZW5naW5lLmxvYWRJbWFnZSh7XG4gICAgICAgICAgICAgICAgZ2lmOiBpbWFnZVNoYXBlLmdpZixcbiAgICAgICAgICAgICAgICBuYW1lOiBpbWFnZVNoYXBlLm5hbWUsXG4gICAgICAgICAgICAgICAgcmVwbGFjZUNvbG9yOiBpbWFnZVNoYXBlLnJlcGxhY2VDb2xvciA/PyBmYWxzZSxcbiAgICAgICAgICAgICAgICBzcmM6IGltYWdlU2hhcGUuc3JjLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX2VuZ2luZSA9IGVuZ2luZTtcbiAgICB9XG4gICAgYWRkSW1hZ2UoaW1hZ2UpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9lbmdpbmUuaW1hZ2VzKSB7XG4gICAgICAgICAgICB0aGlzLl9lbmdpbmUuaW1hZ2VzID0gW107XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fZW5naW5lLmltYWdlcy5wdXNoKGltYWdlKTtcbiAgICB9XG4gICAgZHJhdyhkYXRhKSB7XG4gICAgICAgIGNvbnN0IHsgY29udGV4dCwgcmFkaXVzLCBwYXJ0aWNsZSwgb3BhY2l0eSB9ID0gZGF0YSwgaW1hZ2UgPSBwYXJ0aWNsZS5pbWFnZSwgZWxlbWVudCA9IGltYWdlPy5lbGVtZW50O1xuICAgICAgICBpZiAoIWltYWdlKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29udGV4dC5nbG9iYWxBbHBoYSA9IG9wYWNpdHk7XG4gICAgICAgIGlmIChpbWFnZS5naWYgJiYgaW1hZ2UuZ2lmRGF0YSkge1xuICAgICAgICAgICAgZHJhd0dpZihkYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChlbGVtZW50KSB7XG4gICAgICAgICAgICBjb25zdCByYXRpbyA9IGltYWdlLnJhdGlvLCBwb3MgPSB7XG4gICAgICAgICAgICAgICAgeDogLXJhZGl1cyxcbiAgICAgICAgICAgICAgICB5OiAtcmFkaXVzLFxuICAgICAgICAgICAgfSwgZGlhbWV0ZXIgPSByYWRpdXMgKiBkb3VibGU7XG4gICAgICAgICAgICBjb250ZXh0LmRyYXdJbWFnZShlbGVtZW50LCBwb3MueCwgcG9zLnksIGRpYW1ldGVyLCBkaWFtZXRlciAvIHJhdGlvKTtcbiAgICAgICAgfVxuICAgICAgICBjb250ZXh0Lmdsb2JhbEFscGhhID0gZGVmYXVsdEFscGhhO1xuICAgIH1cbiAgICBnZXRTaWRlc0NvdW50KCkge1xuICAgICAgICByZXR1cm4gc2lkZXM7XG4gICAgfVxuICAgIGFzeW5jIGluaXQoY29udGFpbmVyKSB7XG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSBjb250YWluZXIuYWN0dWFsT3B0aW9ucztcbiAgICAgICAgaWYgKCFvcHRpb25zLnByZWxvYWQgfHwgIXRoaXMuX2VuZ2luZS5sb2FkSW1hZ2UpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IGltYWdlRGF0YSBvZiBvcHRpb25zLnByZWxvYWQpIHtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuX2VuZ2luZS5sb2FkSW1hZ2UoaW1hZ2VEYXRhKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBsb2FkU2hhcGUocGFydGljbGUpIHtcbiAgICAgICAgaWYgKHBhcnRpY2xlLnNoYXBlICE9PSBcImltYWdlXCIgJiYgcGFydGljbGUuc2hhcGUgIT09IFwiaW1hZ2VzXCIpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMuX2VuZ2luZS5pbWFnZXMpIHtcbiAgICAgICAgICAgIHRoaXMuX2VuZ2luZS5pbWFnZXMgPSBbXTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBpbWFnZURhdGEgPSBwYXJ0aWNsZS5zaGFwZURhdGE7XG4gICAgICAgIGlmICghaW1hZ2VEYXRhKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaW1hZ2UgPSB0aGlzLl9lbmdpbmUuaW1hZ2VzLmZpbmQoKHQpID0+IHQubmFtZSA9PT0gaW1hZ2VEYXRhLm5hbWUgfHwgdC5zb3VyY2UgPT09IGltYWdlRGF0YS5zcmMpO1xuICAgICAgICBpZiAoIWltYWdlKSB7XG4gICAgICAgICAgICB2b2lkIHRoaXMubG9hZEltYWdlU2hhcGUoaW1hZ2VEYXRhKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmxvYWRTaGFwZShwYXJ0aWNsZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwYXJ0aWNsZUluaXQoY29udGFpbmVyLCBwYXJ0aWNsZSkge1xuICAgICAgICBpZiAocGFydGljbGUuc2hhcGUgIT09IFwiaW1hZ2VcIiAmJiBwYXJ0aWNsZS5zaGFwZSAhPT0gXCJpbWFnZXNcIikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5fZW5naW5lLmltYWdlcykge1xuICAgICAgICAgICAgdGhpcy5fZW5naW5lLmltYWdlcyA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGltYWdlcyA9IHRoaXMuX2VuZ2luZS5pbWFnZXMsIGltYWdlRGF0YSA9IHBhcnRpY2xlLnNoYXBlRGF0YTtcbiAgICAgICAgaWYgKCFpbWFnZURhdGEpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjb2xvciA9IHBhcnRpY2xlLmdldEZpbGxDb2xvcigpLCBpbWFnZSA9IGltYWdlcy5maW5kKCh0KSA9PiB0Lm5hbWUgPT09IGltYWdlRGF0YS5uYW1lIHx8IHQuc291cmNlID09PSBpbWFnZURhdGEuc3JjKTtcbiAgICAgICAgaWYgKCFpbWFnZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlcGxhY2VDb2xvciA9IGltYWdlRGF0YS5yZXBsYWNlQ29sb3IgPz8gaW1hZ2UucmVwbGFjZUNvbG9yO1xuICAgICAgICBpZiAoaW1hZ2UubG9hZGluZykge1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJ0aWNsZUluaXQoY29udGFpbmVyLCBwYXJ0aWNsZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2b2lkIChhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBsZXQgaW1hZ2VSZXM7XG4gICAgICAgICAgICBpZiAoaW1hZ2Uuc3ZnRGF0YSAmJiBjb2xvcikge1xuICAgICAgICAgICAgICAgIGltYWdlUmVzID0gYXdhaXQgcmVwbGFjZUltYWdlQ29sb3IoaW1hZ2UsIGltYWdlRGF0YSwgY29sb3IsIHBhcnRpY2xlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGltYWdlUmVzID0ge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcixcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogaW1hZ2UsXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ6IGltYWdlLmVsZW1lbnQsXG4gICAgICAgICAgICAgICAgICAgIGdpZjogaW1hZ2UuZ2lmLFxuICAgICAgICAgICAgICAgICAgICBnaWZEYXRhOiBpbWFnZS5naWZEYXRhLFxuICAgICAgICAgICAgICAgICAgICBnaWZMb29wQ291bnQ6IGltYWdlLmdpZkxvb3BDb3VudCxcbiAgICAgICAgICAgICAgICAgICAgbG9hZGVkOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICByYXRpbzogaW1hZ2VEYXRhLndpZHRoICYmIGltYWdlRGF0YS5oZWlnaHRcbiAgICAgICAgICAgICAgICAgICAgICAgID8gaW1hZ2VEYXRhLndpZHRoIC8gaW1hZ2VEYXRhLmhlaWdodFxuICAgICAgICAgICAgICAgICAgICAgICAgOiAoaW1hZ2UucmF0aW8gPz8gZGVmYXVsdFJhdGlvKSxcbiAgICAgICAgICAgICAgICAgICAgcmVwbGFjZUNvbG9yOiByZXBsYWNlQ29sb3IsXG4gICAgICAgICAgICAgICAgICAgIHNvdXJjZTogaW1hZ2VEYXRhLnNyYyxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFpbWFnZVJlcy5yYXRpbykge1xuICAgICAgICAgICAgICAgIGltYWdlUmVzLnJhdGlvID0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGZpbGwgPSBpbWFnZURhdGEuZmlsbCA/PyBwYXJ0aWNsZS5zaGFwZUZpbGwsIGNsb3NlID0gaW1hZ2VEYXRhLmNsb3NlID8/IHBhcnRpY2xlLnNoYXBlQ2xvc2UsIGltYWdlU2hhcGUgPSB7XG4gICAgICAgICAgICAgICAgaW1hZ2U6IGltYWdlUmVzLFxuICAgICAgICAgICAgICAgIGZpbGwsXG4gICAgICAgICAgICAgICAgY2xvc2UsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcGFydGljbGUuaW1hZ2UgPSBpbWFnZVNoYXBlLmltYWdlO1xuICAgICAgICAgICAgcGFydGljbGUuc2hhcGVGaWxsID0gaW1hZ2VTaGFwZS5maWxsO1xuICAgICAgICAgICAgcGFydGljbGUuc2hhcGVDbG9zZSA9IGltYWdlU2hhcGUuY2xvc2U7XG4gICAgICAgIH0pKCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/ImageDrawer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/ImagePreloader.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/ImagePreloader.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImagePreloaderPlugin: () => (/* binding */ ImagePreloaderPlugin)\n/* harmony export */ });\n/* harmony import */ var _Options_Classes_Preload_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Options/Classes/Preload.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Options/Classes/Preload.js\");\n\nclass ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    async getPlugin() {\n        await Promise.resolve();\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source?.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find(t => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new _Options_Classes_Preload_js__WEBPACK_IMPORTED_MODULE_0__.Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL0ltYWdlUHJlbG9hZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVEO0FBQ2hEO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsZ0VBQU87QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVyc29uYWwtcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0B0c3BhcnRpY2xlcytzaGFwZS1pbWFnZUAzLjguMS9ub2RlX21vZHVsZXMvQHRzcGFydGljbGVzL3NoYXBlLWltYWdlL2VzbS9JbWFnZVByZWxvYWRlci5qcz80NTZlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByZWxvYWQgfSBmcm9tIFwiLi9PcHRpb25zL0NsYXNzZXMvUHJlbG9hZC5qc1wiO1xuZXhwb3J0IGNsYXNzIEltYWdlUHJlbG9hZGVyUGx1Z2luIHtcbiAgICBjb25zdHJ1Y3RvcihlbmdpbmUpIHtcbiAgICAgICAgdGhpcy5pZCA9IFwiaW1hZ2VQcmVsb2FkZXJcIjtcbiAgICAgICAgdGhpcy5fZW5naW5lID0gZW5naW5lO1xuICAgIH1cbiAgICBhc3luYyBnZXRQbHVnaW4oKSB7XG4gICAgICAgIGF3YWl0IFByb21pc2UucmVzb2x2ZSgpO1xuICAgICAgICByZXR1cm4ge307XG4gICAgfVxuICAgIGxvYWRPcHRpb25zKG9wdGlvbnMsIHNvdXJjZSkge1xuICAgICAgICBpZiAoIXNvdXJjZT8ucHJlbG9hZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICghb3B0aW9ucy5wcmVsb2FkKSB7XG4gICAgICAgICAgICBvcHRpb25zLnByZWxvYWQgPSBbXTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwcmVsb2FkT3B0aW9ucyA9IG9wdGlvbnMucHJlbG9hZDtcbiAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIHNvdXJjZS5wcmVsb2FkKSB7XG4gICAgICAgICAgICBjb25zdCBleGlzdGluZyA9IHByZWxvYWRPcHRpb25zLmZpbmQodCA9PiB0Lm5hbWUgPT09IGl0ZW0ubmFtZSB8fCB0LnNyYyA9PT0gaXRlbS5zcmMpO1xuICAgICAgICAgICAgaWYgKGV4aXN0aW5nKSB7XG4gICAgICAgICAgICAgICAgZXhpc3RpbmcubG9hZChpdGVtKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IHByZWxvYWQgPSBuZXcgUHJlbG9hZCgpO1xuICAgICAgICAgICAgICAgIHByZWxvYWQubG9hZChpdGVtKTtcbiAgICAgICAgICAgICAgICBwcmVsb2FkT3B0aW9ucy5wdXNoKHByZWxvYWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIG5lZWRzUGx1Z2luKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/ImagePreloader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Options/Classes/Preload.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Options/Classes/Preload.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Preload: () => (/* binding */ Preload)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"(ssr)/./node_modules/.pnpm/@tsparticles+engine@3.8.1/node_modules/@tsparticles/engine/esm/index.js\");\n\nclass Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if ((0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.isNull)(data)) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL09wdGlvbnMvQ2xhc3Nlcy9QcmVsb2FkLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTZDO0FBQ3RDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMkRBQU07QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZXJzb25hbC1wb3J0Zm9saW8vLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL09wdGlvbnMvQ2xhc3Nlcy9QcmVsb2FkLmpzP2QyNzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNOdWxsIH0gZnJvbSBcIkB0c3BhcnRpY2xlcy9lbmdpbmVcIjtcbmV4cG9ydCBjbGFzcyBQcmVsb2FkIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5zcmMgPSBcIlwiO1xuICAgICAgICB0aGlzLmdpZiA9IGZhbHNlO1xuICAgIH1cbiAgICBsb2FkKGRhdGEpIHtcbiAgICAgICAgaWYgKGlzTnVsbChkYXRhKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkYXRhLmdpZiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLmdpZiA9IGRhdGEuZ2lmO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkYXRhLmhlaWdodCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLmhlaWdodCA9IGRhdGEuaGVpZ2h0O1xuICAgICAgICB9XG4gICAgICAgIGlmIChkYXRhLm5hbWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5uYW1lID0gZGF0YS5uYW1lO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkYXRhLnJlcGxhY2VDb2xvciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLnJlcGxhY2VDb2xvciA9IGRhdGEucmVwbGFjZUNvbG9yO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkYXRhLnNyYyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLnNyYyA9IGRhdGEuc3JjO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkYXRhLndpZHRoICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMud2lkdGggPSBkYXRhLndpZHRoO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Options/Classes/Preload.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Utils.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Utils.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   downloadSvgImage: () => (/* binding */ downloadSvgImage),\n/* harmony export */   loadImage: () => (/* binding */ loadImage),\n/* harmony export */   replaceImageColor: () => (/* binding */ replaceImageColor)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"(ssr)/./node_modules/.pnpm/@tsparticles+engine@3.8.1/node_modules/@tsparticles/engine/esm/index.js\");\n\nconst stringStart = 0, defaultOpacity = 1;\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getStyleFromHsl)(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(stringStart, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nasync function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getLogger)().error(`${_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nasync function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getLogger)().error(`${_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nfunction replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? defaultOpacity), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor,\n        source: imageData.src,\n    };\n    return new Promise(resolve => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        const errorHandler = async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        };\n        img.addEventListener(\"error\", () => void errorHandler());\n        img.src = url;\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL1V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBOEU7QUFDOUU7QUFDQSx5Q0FBeUMsRUFBRSxFQUFFLElBQUksWUFBWSxFQUFFLCtCQUErQixJQUFJO0FBQ2xHO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixvRUFBZTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOENBQThDLFFBQVEsV0FBVyxHQUFHLGdDQUFnQztBQUNsSDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDhEQUFTLFlBQVksNERBQVcsRUFBRSxpQkFBaUIsYUFBYTtBQUM1RTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDhEQUFTLFlBQVksNERBQVcsRUFBRTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCx1QkFBdUI7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVyc29uYWwtcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0B0c3BhcnRpY2xlcytzaGFwZS1pbWFnZUAzLjguMS9ub2RlX21vZHVsZXMvQHRzcGFydGljbGVzL3NoYXBlLWltYWdlL2VzbS9VdGlscy5qcz8zYTkwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVycm9yUHJlZml4LCBnZXRMb2dnZXIsIGdldFN0eWxlRnJvbUhzbCB9IGZyb20gXCJAdHNwYXJ0aWNsZXMvZW5naW5lXCI7XG5jb25zdCBzdHJpbmdTdGFydCA9IDAsIGRlZmF1bHRPcGFjaXR5ID0gMTtcbmNvbnN0IGN1cnJlbnRDb2xvclJlZ2V4ID0gLygjKD86WzAtOWEtZl17Mn0pezIsNH18KCNbMC05YS1mXXszfSl8KHJnYnxoc2wpYT9cXCgoLT9cXGQrJT9bLFxcc10rKXsyLDN9XFxzKltcXGQuXSslP1xcKSl8Y3VycmVudGNvbG9yL2dpO1xuZnVuY3Rpb24gcmVwbGFjZUNvbG9yU3ZnKGltYWdlU2hhcGUsIGNvbG9yLCBvcGFjaXR5KSB7XG4gICAgY29uc3QgeyBzdmdEYXRhIH0gPSBpbWFnZVNoYXBlO1xuICAgIGlmICghc3ZnRGF0YSkge1xuICAgICAgICByZXR1cm4gXCJcIjtcbiAgICB9XG4gICAgY29uc3QgY29sb3JTdHlsZSA9IGdldFN0eWxlRnJvbUhzbChjb2xvciwgb3BhY2l0eSk7XG4gICAgaWYgKHN2Z0RhdGEuaW5jbHVkZXMoXCJmaWxsXCIpKSB7XG4gICAgICAgIHJldHVybiBzdmdEYXRhLnJlcGxhY2UoY3VycmVudENvbG9yUmVnZXgsICgpID0+IGNvbG9yU3R5bGUpO1xuICAgIH1cbiAgICBjb25zdCBwcmVGaWxsSW5kZXggPSBzdmdEYXRhLmluZGV4T2YoXCI+XCIpO1xuICAgIHJldHVybiBgJHtzdmdEYXRhLnN1YnN0cmluZyhzdHJpbmdTdGFydCwgcHJlRmlsbEluZGV4KX0gZmlsbD1cIiR7Y29sb3JTdHlsZX1cIiR7c3ZnRGF0YS5zdWJzdHJpbmcocHJlRmlsbEluZGV4KX1gO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvYWRJbWFnZShpbWFnZSkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICBpbWFnZS5sb2FkaW5nID0gdHJ1ZTtcbiAgICAgICAgY29uc3QgaW1nID0gbmV3IEltYWdlKCk7XG4gICAgICAgIGltYWdlLmVsZW1lbnQgPSBpbWc7XG4gICAgICAgIGltZy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCAoKSA9PiB7XG4gICAgICAgICAgICBpbWFnZS5sb2FkaW5nID0gZmFsc2U7XG4gICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgIH0pO1xuICAgICAgICBpbWcuYWRkRXZlbnRMaXN0ZW5lcihcImVycm9yXCIsICgpID0+IHtcbiAgICAgICAgICAgIGltYWdlLmVsZW1lbnQgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICBpbWFnZS5lcnJvciA9IHRydWU7XG4gICAgICAgICAgICBpbWFnZS5sb2FkaW5nID0gZmFsc2U7XG4gICAgICAgICAgICBnZXRMb2dnZXIoKS5lcnJvcihgJHtlcnJvclByZWZpeH0gbG9hZGluZyBpbWFnZTogJHtpbWFnZS5zb3VyY2V9YCk7XG4gICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgIH0pO1xuICAgICAgICBpbWcuc3JjID0gaW1hZ2Uuc291cmNlO1xuICAgIH0pO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRvd25sb2FkU3ZnSW1hZ2UoaW1hZ2UpIHtcbiAgICBpZiAoaW1hZ2UudHlwZSAhPT0gXCJzdmdcIikge1xuICAgICAgICBhd2FpdCBsb2FkSW1hZ2UoaW1hZ2UpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGltYWdlLmxvYWRpbmcgPSB0cnVlO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goaW1hZ2Uuc291cmNlKTtcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgIGdldExvZ2dlcigpLmVycm9yKGAke2Vycm9yUHJlZml4fSBJbWFnZSBub3QgZm91bmRgKTtcbiAgICAgICAgaW1hZ2UuZXJyb3IgPSB0cnVlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaW1hZ2Uuc3ZnRGF0YSA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcbiAgICB9XG4gICAgaW1hZ2UubG9hZGluZyA9IGZhbHNlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlcGxhY2VJbWFnZUNvbG9yKGltYWdlLCBpbWFnZURhdGEsIGNvbG9yLCBwYXJ0aWNsZSkge1xuICAgIGNvbnN0IHN2Z0NvbG9yZWREYXRhID0gcmVwbGFjZUNvbG9yU3ZnKGltYWdlLCBjb2xvciwgcGFydGljbGUub3BhY2l0eT8udmFsdWUgPz8gZGVmYXVsdE9wYWNpdHkpLCBpbWFnZVJlcyA9IHtcbiAgICAgICAgY29sb3IsXG4gICAgICAgIGdpZjogaW1hZ2VEYXRhLmdpZixcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgLi4uaW1hZ2UsXG4gICAgICAgICAgICBzdmdEYXRhOiBzdmdDb2xvcmVkRGF0YSxcbiAgICAgICAgfSxcbiAgICAgICAgbG9hZGVkOiBmYWxzZSxcbiAgICAgICAgcmF0aW86IGltYWdlRGF0YS53aWR0aCAvIGltYWdlRGF0YS5oZWlnaHQsXG4gICAgICAgIHJlcGxhY2VDb2xvcjogaW1hZ2VEYXRhLnJlcGxhY2VDb2xvcixcbiAgICAgICAgc291cmNlOiBpbWFnZURhdGEuc3JjLFxuICAgIH07XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICBjb25zdCBzdmcgPSBuZXcgQmxvYihbc3ZnQ29sb3JlZERhdGFdLCB7IHR5cGU6IFwiaW1hZ2Uvc3ZnK3htbFwiIH0pLCBkb21VcmwgPSBVUkwgfHwgd2luZG93LlVSTCB8fCB3aW5kb3cud2Via2l0VVJMIHx8IHdpbmRvdywgdXJsID0gZG9tVXJsLmNyZWF0ZU9iamVjdFVSTChzdmcpLCBpbWcgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgaW1nLmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsICgpID0+IHtcbiAgICAgICAgICAgIGltYWdlUmVzLmxvYWRlZCA9IHRydWU7XG4gICAgICAgICAgICBpbWFnZVJlcy5lbGVtZW50ID0gaW1nO1xuICAgICAgICAgICAgcmVzb2x2ZShpbWFnZVJlcyk7XG4gICAgICAgICAgICBkb21VcmwucmV2b2tlT2JqZWN0VVJMKHVybCk7XG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBlcnJvckhhbmRsZXIgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBkb21VcmwucmV2b2tlT2JqZWN0VVJMKHVybCk7XG4gICAgICAgICAgICBjb25zdCBpbWcyID0ge1xuICAgICAgICAgICAgICAgIC4uLmltYWdlLFxuICAgICAgICAgICAgICAgIGVycm9yOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBsb2FkaW5nOiB0cnVlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGF3YWl0IGxvYWRJbWFnZShpbWcyKTtcbiAgICAgICAgICAgIGltYWdlUmVzLmxvYWRlZCA9IHRydWU7XG4gICAgICAgICAgICBpbWFnZVJlcy5lbGVtZW50ID0gaW1nMi5lbGVtZW50O1xuICAgICAgICAgICAgcmVzb2x2ZShpbWFnZVJlcyk7XG4gICAgICAgIH07XG4gICAgICAgIGltZy5hZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIiwgKCkgPT4gdm9pZCBlcnJvckhhbmRsZXIoKSk7XG4gICAgICAgIGltZy5zcmMgPSB1cmw7XG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/index.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/index.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadImageShape: () => (/* binding */ loadImageShape)\n/* harmony export */ });\n/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Utils.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/Utils.js\");\n/* harmony import */ var _ImageDrawer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ImageDrawer.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/ImageDrawer.js\");\n/* harmony import */ var _ImagePreloader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ImagePreloader.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/ImagePreloader.js\");\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tsparticles/engine */ \"(ssr)/./node_modules/.pnpm/@tsparticles+engine@3.8.1/node_modules/@tsparticles/engine/esm/index.js\");\n/* harmony import */ var _GifUtils_Utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GifUtils/Utils.js */ \"(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/GifUtils/Utils.js\");\n\n\n\n\n\nconst extLength = 3;\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${_tsparticles_engine__WEBPACK_IMPORTED_MODULE_3__.errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - extLength),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            let imageFunc;\n            if (data.gif) {\n                imageFunc = _GifUtils_Utils_js__WEBPACK_IMPORTED_MODULE_4__.loadGifImage;\n            }\n            else {\n                imageFunc = data.replaceColor ? _Utils_js__WEBPACK_IMPORTED_MODULE_0__.downloadSvgImage : _Utils_js__WEBPACK_IMPORTED_MODULE_0__.loadImage;\n            }\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${_tsparticles_engine__WEBPACK_IMPORTED_MODULE_3__.errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nasync function loadImageShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    addLoadImageToEngine(engine);\n    const preloader = new _ImagePreloader_js__WEBPACK_IMPORTED_MODULE_2__.ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape(new _ImageDrawer_js__WEBPACK_IMPORTED_MODULE_1__.ImageDrawer(engine), refresh);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRzcGFydGljbGVzK3NoYXBlLWltYWdlQDMuOC4xL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvc2hhcGUtaW1hZ2UvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF5RDtBQUNWO0FBQ1k7QUFDVDtBQUNDO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDREQUFXLEVBQUU7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDREQUFZO0FBQ3hDO0FBQ0E7QUFDQSxnREFBZ0QsdURBQWdCLEdBQUcsZ0RBQVM7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsNERBQVcsRUFBRSxFQUFFLHVCQUF1QjtBQUNyRTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSwwQkFBMEIsb0VBQW9CO0FBQzlDO0FBQ0EsOEJBQThCLHdEQUFXO0FBQ3pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVyc29uYWwtcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0B0c3BhcnRpY2xlcytzaGFwZS1pbWFnZUAzLjguMS9ub2RlX21vZHVsZXMvQHRzcGFydGljbGVzL3NoYXBlLWltYWdlL2VzbS9pbmRleC5qcz83NDM3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRvd25sb2FkU3ZnSW1hZ2UsIGxvYWRJbWFnZSB9IGZyb20gXCIuL1V0aWxzLmpzXCI7XG5pbXBvcnQgeyBJbWFnZURyYXdlciB9IGZyb20gXCIuL0ltYWdlRHJhd2VyLmpzXCI7XG5pbXBvcnQgeyBJbWFnZVByZWxvYWRlclBsdWdpbiB9IGZyb20gXCIuL0ltYWdlUHJlbG9hZGVyLmpzXCI7XG5pbXBvcnQgeyBlcnJvclByZWZpeCB9IGZyb20gXCJAdHNwYXJ0aWNsZXMvZW5naW5lXCI7XG5pbXBvcnQgeyBsb2FkR2lmSW1hZ2UgfSBmcm9tIFwiLi9HaWZVdGlscy9VdGlscy5qc1wiO1xuY29uc3QgZXh0TGVuZ3RoID0gMztcbmZ1bmN0aW9uIGFkZExvYWRJbWFnZVRvRW5naW5lKGVuZ2luZSkge1xuICAgIGlmIChlbmdpbmUubG9hZEltYWdlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZW5naW5lLmxvYWRJbWFnZSA9IGFzeW5jIChkYXRhKSA9PiB7XG4gICAgICAgIGlmICghZGF0YS5uYW1lICYmICFkYXRhLnNyYykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2Vycm9yUHJlZml4fSBubyBpbWFnZSBzb3VyY2UgcHJvdmlkZWRgKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWVuZ2luZS5pbWFnZXMpIHtcbiAgICAgICAgICAgIGVuZ2luZS5pbWFnZXMgPSBbXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZW5naW5lLmltYWdlcy5maW5kKCh0KSA9PiB0Lm5hbWUgPT09IGRhdGEubmFtZSB8fCB0LnNvdXJjZSA9PT0gZGF0YS5zcmMpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGltYWdlID0ge1xuICAgICAgICAgICAgICAgIGdpZjogZGF0YS5naWYgPz8gZmFsc2UsXG4gICAgICAgICAgICAgICAgbmFtZTogZGF0YS5uYW1lID8/IGRhdGEuc3JjLFxuICAgICAgICAgICAgICAgIHNvdXJjZTogZGF0YS5zcmMsXG4gICAgICAgICAgICAgICAgdHlwZTogZGF0YS5zcmMuc3Vic3RyaW5nKGRhdGEuc3JjLmxlbmd0aCAtIGV4dExlbmd0aCksXG4gICAgICAgICAgICAgICAgZXJyb3I6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGxvYWRpbmc6IHRydWUsXG4gICAgICAgICAgICAgICAgcmVwbGFjZUNvbG9yOiBkYXRhLnJlcGxhY2VDb2xvcixcbiAgICAgICAgICAgICAgICByYXRpbzogZGF0YS53aWR0aCAmJiBkYXRhLmhlaWdodCA/IGRhdGEud2lkdGggLyBkYXRhLmhlaWdodCA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBlbmdpbmUuaW1hZ2VzLnB1c2goaW1hZ2UpO1xuICAgICAgICAgICAgbGV0IGltYWdlRnVuYztcbiAgICAgICAgICAgIGlmIChkYXRhLmdpZikge1xuICAgICAgICAgICAgICAgIGltYWdlRnVuYyA9IGxvYWRHaWZJbWFnZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGltYWdlRnVuYyA9IGRhdGEucmVwbGFjZUNvbG9yID8gZG93bmxvYWRTdmdJbWFnZSA6IGxvYWRJbWFnZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGF3YWl0IGltYWdlRnVuYyhpbWFnZSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2gge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2Vycm9yUHJlZml4fSAke2RhdGEubmFtZSA/PyBkYXRhLnNyY30gbm90IGZvdW5kYCk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvYWRJbWFnZVNoYXBlKGVuZ2luZSwgcmVmcmVzaCA9IHRydWUpIHtcbiAgICBlbmdpbmUuY2hlY2tWZXJzaW9uKFwiMy44LjFcIik7XG4gICAgYWRkTG9hZEltYWdlVG9FbmdpbmUoZW5naW5lKTtcbiAgICBjb25zdCBwcmVsb2FkZXIgPSBuZXcgSW1hZ2VQcmVsb2FkZXJQbHVnaW4oZW5naW5lKTtcbiAgICBhd2FpdCBlbmdpbmUuYWRkUGx1Z2luKHByZWxvYWRlciwgcmVmcmVzaCk7XG4gICAgYXdhaXQgZW5naW5lLmFkZFNoYXBlKG5ldyBJbWFnZURyYXdlcihlbmdpbmUpLCByZWZyZXNoKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tsparticles+shape-image@3.8.1/node_modules/@tsparticles/shape-image/esm/index.js\n");

/***/ })

};
;